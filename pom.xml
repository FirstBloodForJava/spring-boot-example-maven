<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.oycm</groupId>
    <artifactId>spring-boot-example-maven</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>spring boot example</name>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    </properties>

    <!-- 继承的SpringBoot版本 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.7.RELEASE</version>
    </parent>

    <dependencies>
        <!-- 引用spring-boot-starter-web依赖 web应用依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- 代码修改 编译后生效 -->
        <!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>-->

        <!-- spring data jpa-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!--<dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <scope>runtime</scope>
        </dependency>-->

        <!-- 使用h2内存数据库-->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- tomcat 连接池依赖 -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
        </dependency>

        <!-- dbcp2连接池依赖 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
        </dependency>

        <!-- Oracle驱动 -->
        <dependency>
            <groupId>com.oracle.ojdbc</groupId>
            <artifactId>ojdbc8</artifactId>
            <version>19.3.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!--JavaGenerator 依赖-->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- 桥接Prometheus -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-indexer</artifactId>
            <version>5.2.6.RELEASE</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>


    </dependencies>

    <!-- 引入插件 -->
    <build>
        <resources>
            <!-- 继承spring-boot-starter-parent的功能，实现@X@替换properties的key为X的值(不需要配置就有的功能) -->
            <!--<resource>
                <filtering>true</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/application*.yml</include>
                    <include>**/application*.yaml</include>
                    <include>**/application*.properties</include>
                </includes>
            </resource>-->
        </resources>
        <plugins>
            <!-- 将项目构建成一个可执行的jar包 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.oycm.SpringBootExample</mainClass>
                    <!--配置打包的jar名称以及放在的位置-->
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <finalName>${artifactId}</finalName>
                </configuration>
            </plugin>

            <!--<plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimiter>${resource.delimiter}</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>-->


            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>

                <dependencies>
                    <!-- 项目中有定义即可 -->
                    <dependency>
                        <groupId>com.oracle.ojdbc</groupId>
                        <artifactId>ojdbc8</artifactId>
                        <version>19.3.0.0</version>
                    </dependency>

                    <!--<dependency>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-oracle</artifactId>
                    </dependency>-->
                </dependencies>

                <configuration>

                    <!-- jdbc配置 -->
                    <jdbc>
                        <driver>${spring.datasource.driver}</driver>
                        <url>${spring.datasource.url}</url>
                        <user>${spring.datasource.user}</user>
                        <password>${spring.datasource.password}</password>
                    </jdbc>
                    <generator>
                        <generate>
                            <pojos>true</pojos>
                        </generate>

                        <!-- 代码生成器 -->
                        <!--<name>org.jooq.codegen.JavaGenerator</name>-->
                        <name>com.oycm.codegen.CustomJavaGenerator</name>

                        <database>
                            <!--<name>org.jooq.meta.mysql.MySQLDatabase</name>-->
                            <!-- 包含哪些表支持正则匹配 -->
                            <includes>BSQ_ENTRY_BOND_LIFECYCLE</includes>
                            <!-- 哪个库(schema) -->
                            <inputSchema>DW_WGQ_BASIC</inputSchema>

                        </database>

                        <target>
                            <!-- 生产的包前置 -->
                            <packageName>com.oycm.generator</packageName>
                            <!-- 生成代码目标路径 -->
                            <directory>src/main/java</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>

        </plugins>
        <!--maven自带的功能-->
        <finalName>${artifactId}</finalName>
    </build>

</project>