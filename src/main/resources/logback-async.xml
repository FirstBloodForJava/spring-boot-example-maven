<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 定义全局属性 -->
    <property name="LOG_PATH" value="./log"/>
    <!-- 获取Spring 配置值-->
    <springProperty scope="context" name="application" source="spring.application.name"/>
    <property name="logMaxHistory" value="30"/>
    <property name="charset" value="UTF-8"/>

    <!-- 配置输出日志到控制台 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%thread] [%logger{36}.%M.%L]: %msg%n</pattern>
        </encoder>
    </appender>


    <!-- 配置输出日志到File,使用时间滚动策略 -->
    <appender name="FILE_TIME" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志文件的名称模式 -->
            <fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 启动是否清理过期日志,过期日志根据maxHistory最大文件数 -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <!-- 30个最大文件 -->
            <maxHistory>${logMaxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <!-- 日志输出格式 -->
            <pattern>%d{${timeStampFormat}}[%X{traceId},%X{spanId}] [%-5level] [%thread] %logger{36} - %msg%n</pattern>
            <!-- 此处设置字符集 -->
            <charset>${charset}</charset>
        </encoder>
    </appender>


    <!-- 配置AsyncAppender,异步输出日志到FILE配置 -->
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE_TIME" />
        <!-- 存储日志事件的队列的大小,默认256 -->
        <queueSize>512</queueSize>
        <!-- 0表示满时清理低优先级队列日志(在队列中怎么判断日志的优先级?),其他正值表示表示超过多少%开始清理,默认值时queueSize/5 -->
        <discardingThreshold>0</discardingThreshold>
        <!--默认false,队列满会阻塞调用线程,true则不会-->
        <neverBlock>true</neverBlock>
    </appender>


    <root level="INFO">
        <!--控制台-->
        <appender-ref ref="CONSOLE"/>
        <!--异步实际滚动日志输出-->
        <appender-ref ref="ASYNC"/>

    </root>

</configuration>
